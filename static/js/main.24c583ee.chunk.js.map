{"version":3,"sources":["Statistics/Statistics.module.css","FeedbackOptions/FeedbackOptions.module.css","Section/Section.module.css","Notification/Notification.module.css","Section/Section.js","Notification/Notification.js","FeedbackOptions/FeedbackOptions.js","Statistics/Statistics.js","App.js","index.js"],"names":["module","exports","Section","title","children","className","s","Notification","message","FeedbackOptions","options","onLeaveFeedback","buttonList","map","option","listItem","type","onClick","button","Statistics","good","neutral","bad","total","positivePercentage","list","App","useState","setGood","setNeutral","setBad","countTotalFeedback","event","stateOption","target","textContent","toLowerCase","state","Math","floor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,yBAAyB,QAAU,4BAA4B,IAAM,0B,gBCA9HD,EAAOC,QAAU,CAAC,WAAa,oCAAoC,SAAW,kCAAkC,OAAS,kC,mBCAzHD,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,QAAU,gC,4ICWbC,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,oBAAIC,UAAWC,IAAEH,MAAjB,SAAyBA,IACxBC,M,gBCAQG,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAGH,UAAWC,IAAEE,QAAhB,SAA0BA,K,gBCmBpBC,MApBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAGlC,OACE,oBAAIN,UAAWC,IAAEM,WAAjB,SACGF,EAAQG,KAAI,SAAAC,GAAM,OACjB,oBAAiBT,UAAWC,IAAES,SAA9B,SACE,wBACEC,KAAK,SACLC,QAASN,EACTN,UAAWC,IAAEY,OAHf,SAKGJ,KANIA,S,gBC8BFK,MApCf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC7C,OACE,qCACE,qBAAInB,UAAWC,IAAEmB,KAAjB,UACE,6BACE,8BACE,sBAAMpB,UAAWC,IAAEc,KAAnB,mBADF,IACyCA,OAG3C,6BACE,8BACE,sBAAMf,UAAWC,IAAEe,QAAnB,sBADF,IAC+CA,OAGjD,6BACE,8BACE,sBAAMhB,UAAWC,IAAEgB,IAAnB,kBADF,IACuCA,UAI3C,wCAAWC,KACX,mDACqB,IACnB,uBACElB,UAAS,UAAKmB,GAAsB,IAAMlB,IAAEc,KAAnC,YACNI,GAAsB,GAAOA,EAAqB,IACnDlB,IAAEe,QAFK,YAGLG,EAAqB,IAAMlB,IAAEgB,KAJnC,UAMGE,EANH,cCgCKE,MApDf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOP,EAAP,KAAaQ,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAON,EAAP,KAAgBQ,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOL,EAAP,KAAYQ,EAAZ,KAEMC,EAAqB,WACzB,OAAOX,EAAOC,EAAUC,GAoBxB,OACE,sBAAKjB,UAAU,UAAf,UACE,cAAC,EAAD,CAASF,MAAM,wBAAf,SACE,cAAC,EAAD,CACEO,QAAS,CAAC,OAAO,UAAU,OAC3BC,gBAlBgB,SAAAqB,GACxB,IAAMC,EAAcD,EAAME,OAAOC,YAAYC,cAEzB,SAAhBH,EACFL,GAAQ,SAAAS,GAAK,OAAIA,EAAQ,KACA,YAAhBJ,EACTJ,GAAW,SAAAQ,GAAK,OAAIA,EAAQ,KAE5BP,GAAO,SAAAO,GAAK,OAAIA,EAAQ,UAatB,cAAC,EAAD,CAASlC,MAAM,aAAf,SACG4B,IAAuB,EACtB,cAAC,EAAD,CACEX,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOQ,IACPP,mBA/BHc,KAAKC,MAAOnB,EAAOW,IAAwB,OAkC1C,cAAC,EAAD,CAAcvB,QAAQ,4BC5ClCgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.24c583ee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__2oiZY\",\"good\":\"Statistics_good__1eREB\",\"neutral\":\"Statistics_neutral__2N3aD\",\"bad\":\"Statistics_bad__1dwcn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonList\":\"FeedbackOptions_buttonList__tBRKN\",\"listItem\":\"FeedbackOptions_listItem__2dfTl\",\"button\":\"FeedbackOptions_button__1LfZA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__tshbJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__3qT0I\"};","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <>\n      <h3 className={s.title}>{title}</h3>\n      {children}\n    </>\n  );\n};\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nconst Notification = ({ message }) => {\n  return <p className={s.message}>{message}</p>;\n};\n\nexport default Notification;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  // const optionsArr = Object.keys(options);\n\n  return (\n    <ul className={s.buttonList}>\n      {options.map(option => (\n        <li key={option} className={s.listItem}>\n          <button\n            type=\"button\"\n            onClick={onLeaveFeedback}\n            className={s.button}\n          >\n            {option}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default FeedbackOptions;\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array\n};\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n    return (\n      <>\n        <ul className={s.list}>\n          <li>\n            <p>\n              <span className={s.good}>Good:</span> {good}\n            </p>\n          </li>\n          <li>\n            <p>\n              <span className={s.neutral}>Neutral:</span> {neutral}\n            </p>\n          </li>\n          <li>\n            <p>\n              <span className={s.bad}>Bad:</span> {bad}\n            </p>\n          </li>\n        </ul>\n        <p>Total: {total}</p>\n        <p>\n          Positive feedback:{' '}\n          <span\n            className={`${positivePercentage >= 75 && s.good} ${\n              (positivePercentage >= 50) & (positivePercentage < 75) &&\n              s.neutral\n            } ${positivePercentage < 50 && s.bad}`}\n          >\n            {positivePercentage}%\n          </span>\n        </p>\n      </>\n    );\n}\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import { useState } from 'react';\nimport Section from './Section/Section';\nimport Notification from './Notification/Notification';\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\nimport Statistics from './Statistics/Statistics';\n\nfunction App () {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    return Math.floor((good / countTotalFeedback()) * 100);\n  };\n\n  const handleAddFeedback = event => {\n    const stateOption = event.target.textContent.toLowerCase();\n    \n    if (stateOption === 'good') {\n      setGood(state => state + 1);\n    } else if (stateOption === 'neutral') {\n      setNeutral(state => state + 1);\n    } else {\n      setBad(state => state + 1);\n    }\n  };\n\n  \n    return (\n      <div className=\"wrapper\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={['good','neutral','bad']}\n            onLeaveFeedback={handleAddFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {countTotalFeedback() > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback()}\n              positivePercentage={countPositiveFeedbackPercentage()}\n            ></Statistics>\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}